(module
(func $noneclassException (import "imports" "noneClassException"))
(func $print (import "imports" "print") (param i32) (result i32))
(func $print_num (import "imports" "print_num") (param i32) (result i32))
(func $print_bool (import "imports" "print_bool") (param i32) (result i32))
(func $print_none (import "imports" "print_none") (param i32) (result i32))
(func $min (import "imports" "min") (param i32) (param i32) (result i32))
(func $abs (import "imports" "abs") (param i32) (result i32))
(func $max (import "imports" "max") (param i32) (param i32) (result i32))
(func $pow (import "imports" "pow") (param i32) (param i32) (result i32))
(import "js" "mem" (memory 1))
(global $$heap (mut i32) (i32.const 4))
(global $c (mut i32) (i32.const 0))
(func $C$$constructor
(result i32)
(global.get $$heap)
(i32.add (i32.const 0))
(i32.const 123)
(i32.load)
(global.get $$heap)
(global.set $$heap (i32.add (global.get $$heap) (i32.const 4)))
(return)
)
(func (export "exported_func") (result i32)
(local $$scratch i32)
(global.get $c)
(call $print)
(local.set $$scratch)
(call $C$$constructor)
(global.set $c)
(global.get $c)
(call $print)
(local.set $$scratch)
(global.get $c)
(local.set $$scratch)
(local.get $$scratch)
(i32.eq (i32.const 0) (local.get $$scratch))
(if
(then
(call $noneclassException)
)
)
(i32.add (i32.const 0))
(i32.load)
(call $print_num)
(local.set $$scratch)
(local.get $$scratch)
(return)
)
)